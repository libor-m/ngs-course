install.packages(c("ggplot2", "reshape2"))
train <- read.csv("kaggle_soil//orig/training.csv")
install.packages("GGally")
install.packages(c("devtools", "jsonlite", "labeling", "Rcpp", "reshape2", "scales"))
library(GGally)
install.packages("Rcpp")
library(GGally)
install.packages("Rcpp")
library(GGally)
library(ggplot2)
plotmatrix(df[3596:3600])
d<-read.table("clipboard", headers=F)
d<-read.table("clipboard", header=F)
d<-read.table("clipboard", header=F)
d<-read.delim("clipboard", header=F)
colSums(d, na.rm=T)
library(dplyr)
sapply(d, function(x) class(x))
sapply(d, function(x) class(x)) != "logical"
df <- d[,sapply(d, function(x) class(x)) != "logical"]
View(df)
rowSums(df[,-1:4])
rowSums(df[,-(1:4)])
rowSums(df[,-(1:4)], na.rm=T)
colSums(df[,-(1:4)], na.rm=T)
filt <- colSums(df[,-(1:4)], na.rm=T) > 1
alleles <- df[,-(1:4)][,filt]
View(alleles)
library(vegan)
allnn <- alleles
allnn[is.na(allnn)] <- 0
dmx <- vegdist(alleles, "manh", na.rm=T)
dmx <- vegdist(allnn, "manh", na.rm=T)
pc <- prcomp(dmx)
names(pc)
pc$x
class(pc$x)
library(ggplot2)
ggplot(data.frame(pc$x), aes(PC1, PC2)) + geom_point()
plotdf<-data.frame(df[,1:4], pc$x)
colnames(plotdf)[1:4]<-c("population", "sample", "type", "ploidy")
View(plotdf)
plotdf[,"ploidy"] <- as.factor(plotdf[,"ploidy"])
ggplot(plotdf, aes(PC1, PC2, colour=type, shape=ploidy, label=population)) + geom_text()
ggplot(plotdf, aes(PC1, PC2, colour=type, label=population)) + geom_text() + coord_equal()
ggplot(plotdf, aes(PC1, PC3, colour=type, label=population)) + geom_text() + coord_equal()
ggplot(plotdf, aes(PC1, PC3, colour=type, shape=ploidy)) + geom_point() + coord_equal()
ggplot(plotdf, aes(PC1, PC2, colour=type, shape=ploidy)) + geom_point() + coord_equal()
ggplot(plotdf, aes(PC1, PC2, colour=type, shape=ploidy)) + geom_point(size=6) + coord_equal()
ggplot(plotdf, aes(PC1, PC2, colour=type, shape=ploidy, label=population)) + geom_point(size=6) + geom_text() + coord_equal()
ggplot(plotdf, aes(PC1, PC2, colour=type, shape=ploidy, label=population)) + geom_point(size=6) + geom_text(hjust=0, vjust=0) + coord_equal()
ggplot(plotdf, aes(PC1, PC2, colour=type, shape=ploidy, label=population)) + geom_point(size=6) + geom_text(hjust=-0.5, vjust=1.2) + coord_equal()
ggplot(plotdf, aes(PC1, PC2, colour=type, shape=ploidy, label=population)) + geom_point(size=6) + geom_text(hjust=-0.3, vjust=1) + coord_equal()
paste?
()
ggplot(plotdf, aes(PC1, PC2, colour=type, shape=ploidy, label=population)) + geom_point(size=6) + geom_text(hjust=-0.3, vjust=1) + + geom_text(aes(label=sample)) + coord_equal()
ggplot(plotdf, aes(PC1, PC2, colour=type, shape=ploidy, label=population)) + geom_point(size=6) + geom_text(hjust=-0.3, vjust=1) + geom_text(aes(label=sample)) + coord_equal()
ggplot(plotdf, aes(PC1, PC2, colour=type, shape=ploidy, label=sample)) + geom_point(size=6) + geom_text(hjust=-0.3, vjust=1) + coord_equal()
ggplot(plotdf, aes(PC1, PC2, colour=type, shape=ploidy, label=population)) +
geom_point(size=6) +
geom_text(hjust=-0.3, vjust=1) +
coord_equal() +
ggtitle("arabidopsis microsats (7 distinct) in manhattan/pcoa")
ggplot(plotdf, aes(PC1, PC3, colour=type, shape=ploidy, label=population)) +
geom_point(size=6) +
geom_text(hjust=-0.3, vjust=1) +
coord_equal() +
ggtitle("arabidopsis microsats (7 distinct) in manhattan/pcoa")
plot(pc)
plot(pc, main="pcoa/manhattan scree plot")
library(MASS)
mds <- isoMDS(dmx)
class(mds$points)
plotdf <- cbind(plotdf, mds$points)
View(plotdf)
dim(plotdf)
colnames(plotdf)[69:70] <- c("mdsX", "mdsY")
View(plotdf)
ggplot(plotdf, aes(mdsX, mdsY, colour=type, shape=ploidy, label=population)) +
geom_point(size=6) +
geom_text(hjust=-0.3, vjust=1) +
coord_equal() +
ggtitle("arabidopsis microsats (7 distinct) in nmds")
library(tsne)
dmx <- vegdist(allnn, "bray", na.rm=T)
pc <- prcomp(dmx)
plotdf<-data.frame(df[,1:4], pc$x)
colnames(plotdf)[1:4]<-c("population", "sample", "type", "ploidy")
plotdf[,"ploidy"] <- as.factor(plotdf[,"ploidy"])
ggplot(plotdf, aes(PC1, PC2, colour=type, shape=ploidy, label=population)) +
geom_point(size=6) +
geom_text(hjust=-0.3, vjust=1) +
coord_equal() +
ggtitle("arabidopsis microsats (7 distinct) in manhattan/pcoa")
dst <- "bray" #"manh"
ggplot(plotdf, aes(PC1, PC2, colour=type, shape=ploidy, label=sample)) +
geom_point(size=6) +
geom_text(hjust=-0.3, vjust=1) +
coord_equal() +
ggtitle(paste("arabidopsis microsats (7 distinct) in pca", dst))
ggplot(plotdf, aes(PC1, PC3, colour=type, shape=ploidy, label=sample)) +
geom_point(size=6) +
geom_text(hjust=-0.3, vjust=1) +
coord_equal() +
ggtitle(paste("arabidopsis microsats (7 distinct) in pca", dst))
ggplot(plotdf, aes(PC1, PC2, colour=ploidy, shape=type, label=sample)) +
geom_point(size=6) +
geom_text(hjust=-0.3, vjust=1) +
coord_equal() +
ggtitle(paste("arabidopsis microsats (7 distinct) in pca", dst))
ggplot(plotdf, aes(PC1, PC2, colour=ploidy, shape=type, label=sample)) +
geom_point(size=6) +
geom_text(hjust=-0.3, vjust=1) +
coord_equal() +
scale_shape_discrete(palette=function(n) c(2, 1, 5)[1:n])
ggtitle(paste("arabidopsis microsats (7 distinct) in pca", dst))
ggplot(plotdf, aes(PC1, PC2, colour=ploidy, shape=type, label=sample)) +
geom_point(size=6) +
geom_text(hjust=-0.3, vjust=1) +
coord_equal() +
scale_shape_discrete(palette=function(n) c(2, 1, 5)[1:n]) +
ggtitle(paste("arabidopsis microsats (7 distinct) in pca", dst))
ggplot(plotdf, aes(PC1, PC2, colour=ploidy, shape=type, label=sample)) +
geom_point(size=6) +
geom_text(hjust=-0.3, vjust=1) +
coord_equal() +
scale_shape_discrete(palette=function(n) return(c(2, 1, 5)[1:n])) +
ggtitle(paste("arabidopsis microsats (7 distinct) in pca", dst))
ggplot(plotdf, aes(PC1, PC2, colour=ploidy, shape=type, label=sample)) +
geom_point(size=6) +
geom_text(hjust=-0.3, vjust=1) +
coord_equal() +
scale_shape_discrete(palette=c(2, 1, 5)) +
ggtitle(paste("arabidopsis microsats (7 distinct) in pca", dst))
ggplot(plotdf, aes(PC1, PC2, colour=ploidy, shape=type, label=sample)) +
geom_point(size=6) +
geom_text(hjust=-0.3, vjust=1) +
coord_equal() +
scale_shape_discrete(palette=function(n) c(2, 1, 5)) +
ggtitle(paste("arabidopsis microsats (7 distinct) in pca", dst))
ggplot(plotdf, aes(PC1, PC2, colour=ploidy, shape=type, label=sample)) +
geom_point(size=6) +
geom_text(hjust=-0.3, vjust=1) +
coord_equal() +
scale_shape_manual(values=c(2,5,1)) +
ggtitle(paste("arabidopsis microsats (7 distinct) in pca", dst))
ggplot(plotdf, aes(PC1, PC2, colour=ploidy, shape=type, label=sample)) +
geom_point(size=6) +
geom_text(hjust=-0.3, vjust=1) +
coord_equal() +
scale_shape_manual(values=c(2,1,5)) +
ggtitle(paste("arabidopsis microsats (7 distinct) in pca", dst))
setwd("c:/work/ngs-course/tasks//banana")
d<-read.table("banana.tsv", col.names=c("x", "y","z"))
ggploy(d, aes(x, y)) + geom_point()
ggplot(d, aes(x, y)) + geom_point()
ggplot(d, aes(x, y)) + geom_point() + coord_equal()
ggplot(d, aes(z, y)) + geom_point() + coord_equal()
ggplot(d, aes(x, y)) + geom_point() + coord_equal()
ggplot(d, aes(x, z)) + geom_point() + coord_equal()
ggplot(d, aes(x, -z)) + geom_point() + coord_equal()
matrix(c(1, 2, 3, 4), nrow=2)
matrix(c(1, 2, 3, 4), nrow=2) * matrix(c(1, 2, 3, 4), nrow=2)
matrix(c(1, 2, 3, 4), nrow=2) %*% matrix(c(1, 2, 3, 4), nrow=2)
matrix(c(1, 2, 3, 4), ncol=2)
rotX <- function(t) matrix(c(cost(t), sin(t), 0, -sin(t), cos(t), 0, 0, 0, 1), nrow=3)
rotX(0)
rotX <- function(t) matrix(c(cos(t), sin(t), 0, -sin(t), cos(t), 0, 0, 0, 1), nrow=3)
rotX(0)
rotX(.5)
rotX <- function(t) matrix(c(cos(t), sin(t), 0, -sin(t), cos(t), 0, 0, 0, 1), nrow=3)
rotY <- function(t) matrix(c(1, 0, 0, 0, cos(t), sin(t), -sin(t), cos(t)), nrow=3)
rotZ <- function(t) matrix(c(cos(t), 0, -sin(t), 0, 1, 0, sin(t), 0, cos(t)), nrow=3)
rot3d <- function(tx, ty, tz) rotX(tx) %*% rotY(ty) %*% rotZ(tz)
rmx <- rot3d(.1, .2, .3)
rotX <- function(t) matrix(c(cos(t), sin(t), 0, -sin(t), cos(t), 0, 0, 0, 1), nrow=3)
rotY <- function(t) matrix(c(1, 0, 0, 0, cos(t), sin(t), 0, -sin(t), cos(t)), nrow=3)
rotZ <- function(t) matrix(c(cos(t), 0, -sin(t), 0, 1, 0, sin(t), 0, cos(t)), nrow=3)
rot3d <- function(tx, ty, tz) rotX(tx) %*% rotY(ty) %*% rotZ(tz)
rmx <- rot3d(.1, .2, .3)
d[1,] %*% rmx
matrix(d[1,]) %*% rmx
t(matrix(d[1,]))
t(matrix(d[1,])) %*% rmx
rmx %*% t(matrix(d[1,]))
rmx
class(rmx)
matrix(d[1,])
class(t(matrix(d[1,])))
t(matrix(d[1,])) %*% rmx
rmx %*% matrix(c(1, 2, 3, 4), nrow=2)
rmx %*% matrix(c(1, 2, 3, 4, 1, 2, 3, 4, 5), nrow=3)
rmx %*% matrix(c(1, 2, 3))
rmx %*% matrix(c(1, 2, 3), nrow=3)
rmx %*% matrix(c(1, 2, 3), nrow=1)
matrix(c(1, 2, 3), nrow=1) %*% rmx
cos(PI)
cos(pi)
rmx <- rot3d(pi, 0, 0)
rmx %*% matrix(c(0, 1, 0))
rmx %*% matrix(c(1, 1, 0))
rmx %*% as.matrix(d[1,])
rmx %*% as.matrix(d[1,], ncol=3)
as.matrix(d[1,], ncol=3)
as.matrix(d[1,], nrow=3)
matrix(d[1,], nrow=3)
rmx %*% matrix(d[1,], nrow=3)
rmx %*% matrix(as.numeric(d[1,]), nrow=3)
rmx %*% as.numeric(d[1,])
apply(d, 1, as.numeric)
rot3d.data.frame <- function(df, tx, ty, tz) {
rmx <- rot3d(tx, ty, tz)
res <- data.frame(apply(df, 1, function(x) rmx %*% as.numeric(x)))
colnames(res) <- colnames(df)
}
rb <- rot3d(d, .1, .2, .3)
rot3d_df <- function(df, tx, ty, tz) {
rmx <- rot3d(tx, ty, tz)
res <- data.frame(apply(df, 1, function(x) rmx %*% as.numeric(x)))
colnames(res) <- colnames(df)
}
rb <- rot3d_df(d, .1, .2, .3)
rot3d_df <- function(df, tx, ty, tz) {
rmx <- rot3d(tx, ty, tz)
res <- data.frame(apply(df, 1, function(x) rmx %*% as.numeric(x)))
colnames(res) <- colnames(df)
res
}
rb <- rot3d_df(d, .1, .2, .3)
ggplot(rb, aes(x, y)) + geom_point()
rot3d_df <- function(df, tx, ty, tz) {
rmx <- rot3d(tx, ty, tz)
res <- data.frame(t(apply(df, 1, function(x) rmx %*% as.numeric(x))))
colnames(res) <- colnames(df)
res
}
rb <- rot3d_df(d, .1, .2, .3)
ggplot(rb, aes(x, y)) + geom_point()
ggplot(rb, aes(x, y)) + geom_point() + coord_equal()
rb <- rot3d_df(d, .3, .2, .3)
ggplot(rb, aes(x, y)) + geom_point() + coord_equal()
rb <- rot3d_df(d, .3, .3, .3)
ggplot(rb, aes(x, y)) + geom_point() + coord_equal()
rb <- rot3d_df(d, .3, .3, 2)
ggplot(rb, aes(x, y)) + geom_point() + coord_equal()
rb <- rot3d_df(d, .3, .6, 2)
ggplot(rb, aes(x, y)) + geom_point() + coord_equal()
rb <- rot3d_df(d, .3, .1, 2)
ggplot(rb, aes(x, y)) + geom_point() + coord_equal()
ggplot(rb, aes(x, z)) + geom_point() + coord_equal()
ggplot(rb, aes(y, z)) + geom_point() + coord_equal()
rb <- rot3d_df(d, .4, .1, 2)
ggplot(rb, aes(y, z)) + geom_point() + coord_equal()
rb <- rot3d_df(d, .6, .1, 2)
ggplot(rb, aes(y, z)) + geom_point() + coord_equal()
ggplot(rb, aes(x, y)) + geom_point() + coord_equal()
ggplot(rb, aes(x, y)) + geom_point() + coord_equal()
ggplot(rb, aes(x, y)) + geom_point() + coord_equal()
ggplot(rb, aes(y, z)) + geom_point() + coord_equal()
rb <- rot3d_df(d, .9, .1, 2)
ggplot(rb, aes(y, z)) + geom_point() + coord_equal()
ggplot(rb, aes(x, z)) + geom_point() + coord_equal()
pc <- prcomp(as.matrix(rb))
ggplot(data.frame(pc$x), aes(PC1, PC2)) + geom_point() + coord_equal()
ggplot(data.frame(pc$x), aes(PC1, PC3)) + geom_point() + coord_equal()
ggplot(data.frame(pc$x), aes(PC2, PC3)) + geom_point() + coord_equal()
ggplot(data.frame(pc$x), aes(PC1, PC2)) + geom_point() + coord_equal()
ggplot(data.frame(pc$x), aes(PC1, PC3)) + geom_point() + coord_equal()
dmx <- dist(rb)
mds <- isoMDS(dmx)
class(mds$points)
xx <- data.frame(mds$points)
ggplot(data.frame(mds$points), aes(x1, x2)) + coords_equal()
ggplot(data.frame(mds$points), aes(x1, x2)) + coord_equal()
ggplot(data.frame(mds$points), aes(x1, x2)) + geom_point() + coord_equal()
ggplot(data.frame(mds$points), aes(X1, X2)) + geom_point() + coord_equal()
library(tsne)
dmx <- sample_n(rb, 500)
dmx <- dist(sample_n(rb, 500))
sne <- tsne(dmx)
View(sne)
ggplot(data.frame(sne), aes(V1, V2)) + geom_point() + coord_equal()
View(data.frame(sne))
ggplot(data.frame(sne), aes(X1, X2)) + geom_point() + coord_equal()
ggplot(data.frame(sne, n=seq(500)), aes(X1, X2, colour=n)) + geom_point() + coord_equal()
rbs <- data.frame(sample_n(rb, 500), n=seq(500))
rbs <- data.frame(sample_n(rb, 500), n=seq(500))
dmx <- dist(rbs[,1:3])
sne <- tsne(dmx)
ggplot(data.frame(sne, n=seq(500)), aes(X1, X2, colour=n)) + geom_point() + coord_equal()
ggplot(data.frame(sne, rbs), aes(X1, X2, colour=n)) + geom_point() + coord_equal()
ggplot(data.frame(sne, rbs), aes(X1, X2, colour=n)) + geom_point() + coord_equal() + scale_colour_gradientn(colours = rainbow(7))
ggplot(rbs, aes(x, y, colour=n)) +
geom_point() +
coord_equal() +
scale_colour_gradientn(colours = rainbow(7))
rbs <- sample_n(data.frame(rb, n=seq(dim(rb)[1]) ), 500)
rbn <- data.frame(rb, n=seq(dim(rb)[1])
)
ggplot(rbn, aes(x, y, colour=n)) +
geom_point() +
coord_equal() +
scale_colour_gradientn(colours = rainbow(7))
ggplot(d, aes(x, y)) + geom_point() + coord_equal()
ggplot(d, aes(x, z)) + geom_point() + coord_equal()
ggplot(d, aes(x, z, colour=x)) + geom_point() + coord_equal() + scale_colour_gradientn(colours = rainbow(7))
ggplot(d, aes(x, z, colour=x)) +
geom_point() +
coord_equal() +
scale_colour_gradientn(colours = rainbow(7), guide=NA)
ggplot(d, aes(x, z, colour=x)) +
geom_point() +
coord_equal() +
scale_colour_gradientn(colours = rainbow(7), guide="none")
rbx <- data.frame(rb, origx=d$x)
rbs <- sample_n(rbx, 500)
dmx <- dist(rbs[,1:3])
sne <- tsne(dmx)
ggplot(data.frame(sne, rbx), aes(X1, X2, colour=origx)) +
geom_point() +
coord_equal() +
scale_colour_gradientn(colours = rainbow(7))
ggplot(data.frame(sne, rbs), aes(X1, X2, colour=origx)) +
geom_point() +
coord_equal() +
scale_colour_gradientn(colours = rainbow(7))
ggplot(data.frame(sne, rbs), aes(X1, X2, colour=origx)) +
geom_point() +
coord_equal() +
scale_colour_gradientn(colours = rainbow(7), guide="none")
ggplot(rbs, aes(x, y, colour=origx)) +
geom_point() +
coord_equal() +
scale_colour_gradientn(colours = rainbow(7), guide="none")
ggplot(rbs, aes(x, z, colour=origx)) +
geom_point() +
coord_equal() +
scale_colour_gradientn(colours = rainbow(7), guide="none")
write.csv(rb, file="rotated.csv", row.names=F)
